# Site
repository: sproogen/resume-theme
favicon: images/favicon.ico
github: [metadata]

# Content configuration version
version: 2

# Personal info
name: Batuhan Usluel
title: Software Engineer at CME Group
email: me@batuhanusluel.com

# Dark Mode (true/false/never)
darkmode: never

# Social links
# twitter_username: facespics
github_username: BatuhanUsluel
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
# instagram_username: jameswgrant
linkedin_username: batuhanusluel
# xing_username: jekyll
# pinterest_username: jekyll
# youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
additional_links:
  - title: Pdf Download
    icon: far fa-file-pdf
    url: https://github.com/BatuhanUsluel/BatuhanUsluel.github.io/raw/master/pdf/cv.pdf

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
gtm: "G-31794QJRB9"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me
about_profile_image: images/profile.jpg
about_content: | # this will include new lines to allow paragraphs
  Hello! I'm Batuhan, a software engineer at CME Group and a graduate of <mark>University of Illinois at Urbana-Champaign</mark> with degrees in <mark>Computer Science</mark> and <mark>Economics</mark> (May 2024). I'm passionate about applying technology to solve challenging problems, from trading infrastructure at CME to innovative personal projects.

  At CME, I'm currently working on Java-based real-time risk management systems.

  One project I'm especially proud of is my <mark>algorithmic trading system</mark> built for the Solana blockchain. Harnessing machine learning, real-time blockchain data, and optimized infrastructure, this system effectively predicted new token price movements and achieved significant returns during peak trading periods (<mark>1500% ROI</mark> in one week).

  I'm always eager to tackle deep technological challenges, especially in fintech, and AI-driven solutions. Feel free to contact me at [me@batuhanusluel.com](mailto:me@batuhanusluel.com) or connect via [LinkedIn](https://www.linkedin.com/in/batuhanusluel). Looking forward to connecting!

content:
  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: CME Group
        link: cmegroup.com
        sub_title: Software Engineer
        caption: June 2024 - Present
        description: | # this will include new lines to allow paragraphs
          - First Rotation (June 2024 - January 2025):
            - Worked on a full-stack application based on <mark>Backstage</mark>, an open-source software catalog for building developer portals
            - Designed and implemented custom integrations with internal services, streamlining developer workflows and significantly reducing friction in software discovery and deployment.

          - Second Rotation (January 2025 - Present):
            - Working on Java-based <mark>real-time risk management systems</mark> using <mark>Spring Boot</mark> and <mark>Kafka</mark>
            - Using in-memory databases for live risk / margin calculations

      - layout: left
        title: CME Group
        link: cmegroup.com
        sub_title: Software Engineer Intern
        caption: May 2022 - August 2023
        description: | # this will include new lines to allow paragraphs
          - Summer 2023:
            - Designed dynamic validators for trading infrastructure using Java, enabling seamless configurations and revolutionizing software testing flexibility
            - Reduced execution time by <mark>85%</mark>, significantly improving software development and QA processes
            - Enhanced early error detection, significantly saving developer hours previously spent on troubleshooting
            - Transformed the testing tool, positioning it as a vital component in CME's routine software development and QA processes

          - Summer 2022:
            - Refined a critical Java application, streamlining real-time testing for CME's buyer-seller matching engines
            - Implemented a comparative analysis feature, allowing for real-time contrast between established outputs and new prototype versions, enhancing quality checks
            - Implemented automated alerts via <mark>Splunk</mark>, reducing manual checks and increasing system reliability
            - Leveraged <mark>Kafka</mark> for real-time streaming, reducing system downtime and enhancing reliability metrics

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: University of Illinois at Urbana-Champaign
        caption: |
          January 2022 - Present (Expected Graduation: May 2024)  <br>
          Major GPA: <mark>3.93</mark>
        sub_title: Computer Science + Economics
        # quote: >
        #   GPA: 4.0
        # description: | # this will include new lines to allow paragraphs
        #   TEMP
      - layout: top-middle
        title: Purdue University
        caption: |
          August 2020 - December 2021 <br>
          GPA: 3.56
        sub_title: Computer Science
        # quote: >
        # description: | # this will include new lines to allow paragraphs
        #   TEMP

  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: Solana Trading System | Python, NodeJS, sklearn, PostgreSQL, AWS
        link: https://coinstats.app/address/BgrVfkzUTpKMb3M4A5HWgksECZ7FrkRHaj3ofhmDxRxp/
        description: | # this will include new lines to allow paragraphs
          - Developed a machine learning-powered trading system utilizing multiple ML models to predict newly launched solana crypto price movements
          - Achieved returns of <mark>1500%</mark> ($50 to $800) within 1 week during peak performance, with <mark>>1000</mark> coins traded
          - Deployed and maintained a dedicated Solana validator node to optimize trade execution speed and minimize latency
          - Implemented data processing pipelines integrating <mark>blockchain data</mark>, <mark>social media metrics</mark>, <mark>website info</mark> (such as whois & technologies used) and <mark>trading patterns</mark>

      - layout: top-middle
        title: RetailGPT | Javascript
        link: https://retailgpt.chat/
        description: | # this will include new lines to allow paragraphs
          - Engineered an <mark>AI-powered chatbot</mark> using GPT-4, enabling automated, intelligent customer support for Shopify merchants.
          - Utilized <mark>vector databases</mark> to index store pages and products, enabling RetailGPT to retrieve and present relevant information upon customer queries.
          - Developed a scalable backend with <mark>Node.js</mark> and <mark>Express</mark>, deployed and managed on <mark>AWS</mark>.
          - Crafted a responsive frontend using <mark>React</mark> and JavaScript, focused on providing an intuitive and seamless user experience.

      - layout: top-middle
        title: Arbitrage Bot | Python
        additional_links:
          - title: Arbitrage Bot
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/ArbitrageBot
        description: | # this will include new lines to allow paragraphs
          - Designed and developed a cryptocurrency trading bot that identifies and capitalizes on pricing discrepancies between various exchanges.
          - Engineered the bot to connect to multiple exchanges through their APIs, fetch real-time price data, and analyze for profitable trading opportunities.
          - Implemented an automated trading system that executes trades instantly when profitable discrepancies are detected, based on pre-defined criteria.         
          - Open-sourced the project on GitHub, where it has garnered significant community engagement with <mark>160+ stars</mark> and <mark>60+ forks</mark>, indicating its utility and popularity among developers.

      - layout: top-middle
        title: InboxVoicer | Python, NodeJS, GCP, Cloudflare, Terraform
        link: https://inboxvoicer.com/
        description: | # this will include new lines to allow paragraphs
          - Developed an automated email-to-audio transcription service.
          - Utilized Cloudflare and Google Cloud Platform for scalable email handling and audio generation.
          - Implemented personalized private RSS feeds, enabling users to securely access audio transcriptions directly in their podcast apps.
          - Leveraged LLMs to clean and enhance transcriptions, structuring them into well-formatted chapters with relevant headers.

      - layout: top-middle
        title: PricePerProtein | Python, NodeJS, GCP
        link: priceperprotein.com
        description: | # this will include new lines to allow paragraphs
          - Developed a web tool helping users find and compare protein powders by nutritional value, price-per-gram, and dietary filters.
          - Built automated Amazon data extraction pipelines leveraging <mark>multimodal LLMs</mark> to pull accurate, detailed nutritional information from product images.
          - Designed structured data system supporting product variations and intuitive sorting/filtering options (protein per dollar, calories per protein, dietary restrictions, user ratings).

      - layout: top-middle
        title: Algorithmic Support and Resistance | Python
        additional_links:
          - title: Algorithmic Support and Resistance
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/Algorithmic-Support-and-Resistance
        description: | # this will include new lines to allow paragraphs
          - Engineered a tool to detect reversal points on stock prices by identifying clusters of local min and max points
          - Utilized Yahoo Finance for stock price history and visualized charts with marked reversal points.
          - Project open-sourced on GitHub, garnering <mark>290+ stars</mark> and <mark>50+ forks</mark>.

      - layout: top-middle
        title: YoutubeTimestamps | JS
        link: https://chromewebstore.google.com/detail/youtube-timestamped-comme/hemochpgdbblobafehgcngacdjmaledg
        additional_links:
          - title: YoutubeTimestamps
            icon: fab fa-github
            url: https://chromewebstore.google.com/detail/youtube-timestamped-comme/hemochpgdbblobafehgcngacdjmaledg
        description: | # this will include new lines to allow paragraphs
          - Built a Chrome extension enhancing YouTube videos by showing timestamped comments on the timeline.
          - Parsed timestamps from video descriptions and comments dynamically.
          - Added interactive markers and tooltips for seamless user navigation.

      - layout: top-middle
        title: App Performance Tracker | Javascript & Python
        additional_links:
          - title: App Performance Tracker
            icon: fab fa-github
            url: https://github.com/CS222-UIUC/course-project-group-negative10
        description: | # this will include new lines to allow paragraphs
          - Developed a responsive and intuitive user interface using React and JavaScript, empowering app developers to track and compare their app's performance against competitors across Google Play and Apple App Stores.
          - Implemented real-time review tracking feature for the Play Store, enabling developers to monitor user sentiment and feedback over time, and correlating this with specific updates to their app.
          - Designed and implemented a Django backend, serving as a RESTful API that scrapes, processes, and delivers app performance data to the frontend.

      - layout: top-middle
        title: Trading Automator Bot | Java
        additional_links:
          - title: Trading Automator Bot
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/Trading-Automator-Bot
        description: | # this will include new lines to allow paragraphs
          - Developed a comprehensive GUI application enabling seamless cryptocurrency trading.
          - Engineered versatile trading features, including arbitrage detection, market making algorithms, back-testing capabilities, live trading of Technical Analysis Strategies, dollar-cost averaging implementations, and trailing stop functionalities.
          - Utilized the Xchange library to facilitate support for dozens of leading cryptocurrency exchanges, simplifying multi-platform trading for users.

      - layout: top-middle
        title: iDetect | Python
        link: https://devpost.com/software/idetect
        additional_links:
          - title: ClassAttentionDetector
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/ClassAttentionDetector
          - title: Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/watch?v=9xF6H83u_Nc
        description: | # this will include new lines to allow paragraphs
          - Developed "iDetect," a real-time emotion analysis application, at the iMAKE hackathon, enabling speakers in virtual meetings to gauge audience engagement by analyzing video streams.
          - Utilized Python's DeepFace library for facial recognition and emotion classification
          - Designed and implemented data visualization components to display real-time emotion statistics via tables and graphs.

      - layout: top-middle
        title: BTSplit | Python
        additional_links:
          - title: BTSplit
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/BTSplit
        description: | # this will include new lines to allow paragraphs
          - Coded a tool to manage large spreadsheet files due to the limitation of ~1 million rows in excel files.
          - Can split a larger file into many sheets or subfiles of various file types, adjusts formulas to point to new cells.
          - Supports different file types (.csv, .xlsx, .xls) and has many customizable settings.

      - layout: top-middle
        title: RMV Road Test Appointment Finder | Python
        additional_links:
          - title: RMV Road Test Appointment Finder
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/RMV-Road-Test-Appointment-Finder
        description: | # this will include new lines to allow paragraphs
          - Regularly searches the RMV website for desired road test appointments
          - Notifies the user when an appointment is found

      - layout: top-middle
        title: Chrome Video Note Taker | JavaScript
        link: https://devpost.com/software/video-note-taker
        additional_links:
          - title: Chrome Video Note Taker
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/Chrome-Video-Note-Taker
        description: | # this will include new lines to allow paragraphs
          - Chrome extension that allows you to take notes as you are watching a video.
          - Can later on click on a note which opens up the video at the right timestamp.
          - Done during 'Hello World 2020' hackathon at Purdue.

      - layout: top-middle
        title: Spotify Song Announcer | Python
        additional_links:
          - title: Spotify Song Announcer
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/Spotify-Song-Announcer
        description: | # this will include new lines to allow paragraphs
          - Created "Spotify Song Announcer," a Python application that detects song changes in Spotify and audibly announces the song name and artist, enhancing user experience.
          - Utilized SwSpotify for song information retrieval, bypassing the need for Spotify API and enabling offline usage.
          - Integrated pyttsx3 for text-to-speech conversion.
          - Configurable options for voice selection, announcement delay, and speaking rate, allowing for personalized user settings via command line arguments.

# Footer
# footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
  - jekyll-seo-tag
