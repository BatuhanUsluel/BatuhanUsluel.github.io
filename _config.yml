# Site
repository: sproogen/resume-theme
favicon: images/favicon.ico
github: [metadata]

# Content configuration version
version: 2

# Personal info
name: Batuhan Usluel
title: Computer Science + Economics at UIUC
email: me@batuhanusluel.com

# Dark Mode (true/false/never)
darkmode: false

# Social links
# twitter_username: facespics
github_username:  BatuhanUsluel
# stackoverflow_username: "00000001"
# dribbble_username: jekyll
# facebook_username: jekyll
# flickr_username: jekyll
# instagram_username: jameswgrant
linkedin_username: batuhanusluel
# xing_username: jekyll
# pinterest_username: jekyll
# youtube_username: globalmtb
# googleplus_username: +jekyll
# orcid_username: 0000-0000-0000-0000

# Additional icon links
additional_links:
- title: Pdf Download
  icon: far fa-file-pdf
  url: https://github.com/BatuhanUsluel/BatuhanUsluel.github.io/raw/master/pdf/cv.pdf

# Google Analytics and Tag Manager
# Using more than one of these may cause issues with reporting
gtm: "G-31794QJRB9"
# gtag: "UA-00000000-0"
# google_analytics: "UA-00000000-0"

# About Section
# about_title: About Me
about_profile_image: images/profile.jpg
about_content: | # this will include new lines to allow paragraphs
  Hello! I'm Batuhan, a highly motivated Computer Science and Economics student at the University of Illinois at Urbana-Champaign (UIUC), expecting to graduate in May 2024. My passion for coding and problem-solving has been the driving force behind my academic and professional pursuits.
  
  My software engineering internship at CME Group gave me invaluable experience in a professional tech environment. There, I built and deployed a real-time testing application for buyer-seller matching engines using Java, which greatly improved the speed at which bugs are caught.
  
  My personal project portfolio is a testament to my broad skill set and my enthusiasm for tackling complex, real-world challenges through software. My latest project, 'RetailGPT,' is an AI-powered chatbot for Shopify, developed using GPT-4. It allows customers to inquire about the store's products, shipping information, their specific orders, and more, with the AI using vector databases and function calls to respond. Store owners can manage these conversations from their admin page, making this a full fledged customer service application. This solution is hosted on AWS, ensuring high reliability for customers.
  
  Beyond RetailGPT, my projects span emotion-analysis applications, trading bots for cryptocurrencies, data management tools, and more. Each project, whether it involves Python, Java, or JavaScript, is a new learning experience and an opportunity for me to push my boundaries in software development.
  
  These endeavors, many of which have garnered significant attention on GitHub, demonstrate my ability to not only code but also conceptualize and execute full-scale, innovative solutions. I am excited to tackle new challenges and am eager to contribute my skills to a dynamic and innovative tech team.
  
  As I approach my graduation in May 2024, I am actively seeking new graduate positions where I can apply my technical skills and enthusiasm for problem-solving in a collaborative and innovative environment.
  
  Feel free to reach me at [me@batuhanusluel.com](mailto:me@batuhanusluel.com) or connect with me on [LinkedIn](https://www.linkedin.com/in/batuhanusluel) to discuss opportunities or to simply network. I look forward to connecting with you!


content:

  - title: Experience # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: left
        title: CME Group
        link: cmegroup.com
        sub_title: Software Engineer Intern
        caption: May 2023 - August 2023
        description: | # this will include new lines to allow paragraphs
          - Returned for a second internship at CME Group, further enhancing the testing application I initially developed.
          - Implemented configurable validators, allowing adaptable testing conditions in the development cycle.
          - Dramatically improved application performance, cutting execution time from 16 minutes to 2 minutes.
          - By catching errors early and pinpointing their locations, saved countless developer hours that would otherwise be spent on debugging.
          - Made the application a key tool in daily development, minimizing downstream issues.
      - layout: left
        title: CME Group
        link: cmegroup.com
        sub_title: Software Engineer Intern
        caption: May 2022 - August 2022
        description: | # this will include new lines to allow paragraphs
          - Built an application in Java for real time testing of CMEs buyer seller matching engines.
          - Compares outputs of a known working version to a new prototype version.
          - Replaced periodic manual error checks with an automated alerting system.
          - Deployed Kafka to listen to engine and relay messages for performance and reliability logs.

  - title: Education # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: University of Illinois at Urbana-Champaign
        caption: |
          January 2022 - Present (Expected Graduation: May 2024)  <br>
          GPA: 3.93
        sub_title: Computer Science + Economics
        # quote: >
        #   GPA: 4.0
        # description: | # this will include new lines to allow paragraphs
        #   TEMP
      - layout: top-middle
        title: Purdue University
        caption: |
          August 2020 - December 2021 <br>
          GPA: 3.56
        sub_title: Computer Science
        # quote: >
        # description: | # this will include new lines to allow paragraphs
        #   TEMP

  - title: Projects # Title for the section
    layout: list # Type of content section (list/text)
    content:
      - layout: top-middle
        title: RetailGPT | Javascript
        link: https://retailgpt.chat/
        description: | # this will include new lines to allow paragraphs
          - Engineered an AI-powered chatbot using GPT-4, enabling automated, intelligent customer support for Shopify merchants.
          - Developed a scalable backend with Node.js and Express, deployed and managed on Amazon Web Services (AWS).
          - Crafted a responsive frontend using React and JavaScript, focused on providing an intuitive and seamless user experience.

      - layout: top-middle
        title: App Performance Tracker (Comp) | Javascript & Python
        additional_links:
          - title:  App Performance Tracker (Comp)
            icon: fab fa-github
            url: https://github.com/CS222-UIUC/course-project-group-negative10
        description: | # this will include new lines to allow paragraphs
          - Developed a responsive and intuitive user interface using React and JavaScript, empowering app developers to track and compare their app’s performance against competitors across Google Play and Apple App Stores.
          - Implemented real-time review tracking feature for the Play Store, enabling developers to monitor user sentiment and feedback over time, and correlating this with specific updates to their app.
          - Designed and implemented a Django backend, serving as a RESTful API that scrapes, processes, and delivers app performance data to the frontend.

      - layout: top-middle
        title: iDetect | Python
        link: https://devpost.com/software/idetect
        additional_links:
          - title:  ClassAttentionDetector
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/ClassAttentionDetector
          - title:  Demo
            icon: fab fa-youtube
            url: https://www.youtube.com/watch?v=9xF6H83u_Nc
        description: | # this will include new lines to allow paragraphs
          - Developed "iDetect," a real-time emotion analysis application, at the iMAKE hackathon, enabling speakers in virtual meetings to gauge audience engagement by analyzing video streams.
          - Utilized Python’s DeepFace library for facial recognition and emotion classification
          - Designed and implemented data visualization components to display real-time emotion statistics via tables and graphs.
          
      - layout: top-middle
        title: Algorithmic Support and Resistance | Python
        additional_links:
          - title:  Algorithmic Support and Resistance
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/Algorithmic-Support-and-Resistance
        description: | # this will include new lines to allow paragraphs
         - Engineered a tool to detect reversal points on stock prices by identifying clusters of local min and max points
         - Utilized Yahoo Finance for stock price history and visualized charts with marked reversal points.
         - Project open-sourced on GitHub, garnering 240+ stars and 50+ forks.
      
      - layout: top-middle
        title: Arbitrage Bot | Python
        additional_links:
          - title:  Arbitrage Bot
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/ArbitrageBot
        description: | # this will include new lines to allow paragraphs
          - Designed and developed a cryptocurrency trading bot that identifies and capitalizes on pricing discrepancies between various exchanges.
          - Engineered the bot to connect to multiple exchanges through their APIs, fetch real-time price data, and analyze for profitable trading opportunities.
          - Implemented an automated trading system that executes trades instantly when profitable discrepancies are detected, based on pre-defined criteria.         
          - Open-sourced the project on GitHub, where it has garnered significant community engagement with 160+ stars and 60+ forks, indicating its utility and popularity among developers.

      - layout: top-middle
        title: Trading Automator Bot | Java
        additional_links:
          - title:  Trading Automator Bot
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/Trading-Automator-Bot
        description: | # this will include new lines to allow paragraphs
          - Developed a comprehensive GUI application enabling seamless cryptocurrency trading.
          - Engineered versatile trading features, including arbitrage detection, market making algorithms, back-testing capabilities, live trading of Technical Analysis Strategies, dollar-cost averaging implementations, and trailing stop functionalities.
          - Utilized the Xchange library to facilitate support for dozens of leading cryptocurrency exchanges, simplifying multi-platform trading for users.

      - layout: top-middle
        title: BTSplit | Python
        additional_links:
          - title:  BTSplit
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/BTSplit
        description: | # this will include new lines to allow paragraphs
          - Coded a tool to manage large spreadsheet files due to the limitation of ~1 million rows in excel files.
          - Can split a larger file into many sheets or subfiles of various file types, adjusts formulas to point to new cells.
          - Supports different file types (.csv, .xlsx, .xls) and has many customizable settings.
          
      - layout: top-middle
        title: RMV Road Test Appointment Finder | Python
        additional_links:
          - title:  RMV Road Test Appointment Finder
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/RMV-Road-Test-Appointment-Finder
        description: | # this will include new lines to allow paragraphs
          - Regularly searches the RMV website for desired road test appointments
          - Notifies the user when an appointment is found

      - layout: top-middle
        title: Chrome Video Note Taker | JavaScript
        link: https://devpost.com/software/video-note-taker
        additional_links:
          - title: Chrome Video Note Taker
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/Chrome-Video-Note-Taker
        description: | # this will include new lines to allow paragraphs
          - Chrome extension that allows you to take notes as you are watching a video.
          - Can later on click on a note which opens up the video at the right timestamp.
          - Done during 'Hello World 2020' hackathon at Purdue.

      - layout: top-middle
        title: Spotify Song Announcer | Python
        additional_links:
          - title: Spotify Song Announcer
            icon: fab fa-github
            url: https://github.com/BatuhanUsluel/Spotify-Song-Announcer
        description: | # this will include new lines to allow paragraphs
          - Created "Spotify Song Announcer," a Python application that detects song changes in Spotify and audibly announces the song name and artist, enhancing user experience.
          - Utilized SwSpotify for song information retrieval, bypassing the need for Spotify API and enabling offline usage.
          - Integrated pyttsx3 for text-to-speech conversion.
          - Configurable options for voice selection, announcement delay, and speaking rate, allowing for personalized user settings via command line arguments.




# Footer
# footer_show_references: true
# references_title: References on request (Override references text)

# Build settings
remote_theme: sproogen/resume-theme

sass:
  sass_dir: _sass
  style: compressed

plugins:
 - jekyll-seo-tag
